<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">

    <resultMap id="BaseResultMap" type="com.atguigu.gmall.model.product.BaseAttrInfo">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="attrName" column="attr_name" jdbcType="VARCHAR"/>
        <result property="categoryId" column="category_id" jdbcType="BIGINT"/>
        <result property="categoryLevel" column="category_level" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,attr_name,category_id,
        category_level
    </sql>

    <!--自定义结果集-->
    <resultMap id="AttrInfoAndValue" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">
        <!--用id标签区分出唯一id-->
        <id column="id" property="id"></id>

        <!--如果类的属性名与数据库的字段一一对应 那么可以使用 autoMapping="true" 自动映射 -->
        <!--<result column="attr_name" property="attrName"></result>-->
        <!--<result column="category_id" property="categoryId"></result>-->
        <!--<result column="category_level" property="categoryLevel"></result>-->

        <!--BaseAttrInfo里有一个attrValueList临时集合属性 将第二个表查询到的数据封装到BaseAttrValue 就是哪个临时list集合-->
        <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true">
            <id column="vid" property="id"></id>
            <!--            <result column="value_name" property="valueName"></result>-->
            <!--            <result column="attr_id" property="attrId"></result>-->
        </collection>

    </resultMap>

    <select id="getAttrInfoAndValueByCategoryId"
            resultMap="AttrInfoAndValue">
        select i.*, v.id vid, v.value_name, v.attr_id
        from base_attr_info i
        left join base_attr_value v on i.id = v.attr_id

        <where>
            <if test="category1Id != null and category1Id !=0">
                i.category_id = #{category1Id} and i.category_level = 1
            </if>
            <if test="category2Id != null and category2Id !=0">
                or i.category_id = #{category2Id} and i.category_level = 2
            </if>
            <if test="category3Id != null and category3Id !=0">
                or i.category_id = #{category3Id} and i.category_level = 3
            </if>
        </where>


    </select>
</mapper>
